{"ast":null,"code":"var _jsxFileName = \"E:\\\\simple-mern-project\\\\frontend\\\\src\\\\places\\\\pages\\\\NewPlace.js\";\nimport React, { useCallback, useReducer } from \"react\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport { VALIDATOR_MAXLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport \"./NewPlace.css\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n\n      return { ...state,\n        input: { ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          }\n        },\n        isValid: formIsValid\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst NewPlace = () => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: {\n      title: {\n        value: \"\",\n        isValid: false\n      },\n      description: {\n        value: \"\",\n        isValid: false\n      }\n    },\n    isValid: false\n  });\n  const titleInputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      isValid: isValid\n    });\n  }, []);\n  const descriptionInputHandler = useCallback((id, value, isValid));\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title.\",\n    onInput: titleInputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MAXLENGTH(5)],\n    errorText: \"Please enter a valid description (at least 5 characters).\",\n    onInput: descriptionInputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default NewPlace;","map":{"version":3,"sources":["E:/simple-mern-project/frontend/src/places/pages/NewPlace.js"],"names":["React","useCallback","useReducer","Input","VALIDATOR_MAXLENGTH","VALIDATOR_REQUIRE","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","input","value","NewPlace","formState","dispatch","title","description","titleInputHandler","id","descriptionInputHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,UAA7B,QAA+C,OAA/C;AAEA,OAAOC,KAAP,MAAkB,4CAAlB;AACA,SACIC,mBADJ,EAEIC,iBAFJ,QAGO,8BAHP;AAIA,OAAO,gBAAP;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,cAAL;AACI,UAAIC,WAAW,GAAG,IAAlB;;AACA,WAAK,MAAMC,OAAX,IAAsBJ,KAAK,CAACK,MAA5B,EAAoC;AAChC,YAAID,OAAO,KAAKH,MAAM,CAACG,OAAvB,EAAgC;AAC5BD,UAAAA,WAAW,GAAGA,WAAW,IAAIF,MAAM,CAACK,OAApC;AACH,SAFD,MAEO;AACHH,UAAAA,WAAW,GAAGA,WAAW,IAAIH,KAAK,CAACK,MAAN,CAAaD,OAAb,EAAsBE,OAAnD;AACH;AACJ;;AACD,aAAO,EACH,GAAGN,KADA;AAEHO,QAAAA,KAAK,EAAE,EACH,GAAGP,KAAK,CAACK,MADN;AAEH,WAACJ,MAAM,CAACG,OAAR,GAAkB;AACdI,YAAAA,KAAK,EAAEP,MAAM,CAACO,KADA;AAEdF,YAAAA,OAAO,EAAEL,MAAM,CAACK;AAFF;AAFf,SAFJ;AASHA,QAAAA,OAAO,EAAEH;AATN,OAAP;;AAWJ;AACI,aAAOH,KAAP;AAtBR;AAwBH,CAzBD;;AA0BA,MAAMS,QAAQ,GAAG,MAAM;AACnB,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBhB,UAAU,CAACI,WAAD,EAAc;AAClDM,IAAAA,MAAM,EAAE;AACJO,MAAAA,KAAK,EAAE;AAAEJ,QAAAA,KAAK,EAAE,EAAT;AAAaF,QAAAA,OAAO,EAAE;AAAtB,OADH;AAEJO,MAAAA,WAAW,EAAE;AAAEL,QAAAA,KAAK,EAAE,EAAT;AAAaF,QAAAA,OAAO,EAAE;AAAtB;AAFT,KAD0C;AAKlDA,IAAAA,OAAO,EAAE;AALyC,GAAd,CAAxC;AAOA,QAAMQ,iBAAiB,GAAGpB,WAAW,CAAC,CAACqB,EAAD,EAAKP,KAAL,EAAYF,OAAZ,KAAwB;AAC1DK,IAAAA,QAAQ,CAAC;AAAET,MAAAA,IAAI,EAAE,cAAR;AAAwBM,MAAAA,KAAK,EAAEA,KAA/B;AAAsCF,MAAAA,OAAO,EAAEA;AAA/C,KAAD,CAAR;AACH,GAFoC,EAElC,EAFkC,CAArC;AAGA,QAAMU,uBAAuB,GAAGtB,WAAW,EAAEqB,EAAE,EAAEP,KAAF,EAASF,OAAb,EAA3C;AACA,sBACI;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,EAAE,EAAC,OADP;AAEI,IAAA,OAAO,EAAC,OAFZ;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,KAAK,EAAC,OAJV;AAKI,IAAA,UAAU,EAAE,CAACR,iBAAiB,EAAlB,CALhB;AAMI,IAAA,SAAS,EAAC,6BANd;AAOI,IAAA,OAAO,EAAEgB,iBAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAUI,oBAAC,KAAD;AACI,IAAA,EAAE,EAAC,aADP;AAEI,IAAA,OAAO,EAAC,UAFZ;AAGI,IAAA,KAAK,EAAC,aAHV;AAII,IAAA,UAAU,EAAE,CAACjB,mBAAmB,CAAC,CAAD,CAApB,CAJhB;AAKI,IAAA,SAAS,EAAC,2DALd;AAMI,IAAA,OAAO,EAAEmB,uBANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADJ;AAqBH,CAjCD;;AAmCA,eAAeP,QAAf","sourcesContent":["import React, { useCallback, useReducer } from \"react\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport {\n    VALIDATOR_MAXLENGTH,\n    VALIDATOR_REQUIRE,\n} from \"../../shared/util/validators\";\nimport \"./NewPlace.css\";\n\nconst formReducer = (state, action) => {\n    switch (action.type) {\n        case \"INPUT_CHANGE\":\n            let formIsValid = true;\n            for (const inputId in state.inputs) {\n                if (inputId === action.inputId) {\n                    formIsValid = formIsValid && action.isValid;\n                } else {\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\n                }\n            }\n            return {\n                ...state,\n                input: {\n                    ...state.inputs,\n                    [action.inputId]: {\n                        value: action.value,\n                        isValid: action.isValid,\n                    },\n                },\n                isValid: formIsValid,\n            };\n        default:\n            return state;\n    }\n};\nconst NewPlace = () => {\n    const [formState, dispatch] = useReducer(formReducer, {\n        inputs: {\n            title: { value: \"\", isValid: false },\n            description: { value: \"\", isValid: false },\n        },\n        isValid: false,\n    });\n    const titleInputHandler = useCallback((id, value, isValid) => {\n        dispatch({ type: \"INPUT_CHANGE\", value: value, isValid: isValid });\n    }, []);\n    const descriptionInputHandler = useCallback((id, value, isValid));\n    return (\n        <form className=\"place-form\">\n            <Input\n                id=\"title\"\n                element=\"input\"\n                type=\"text\"\n                label=\"Title\"\n                validators={[VALIDATOR_REQUIRE()]}\n                errorText=\"Please enter a valid title.\"\n                onInput={titleInputHandler}\n            />\n            <Input\n                id=\"description\"\n                element=\"textarea\"\n                label=\"Description\"\n                validators={[VALIDATOR_MAXLENGTH(5)]}\n                errorText=\"Please enter a valid description (at least 5 characters).\"\n                onInput={descriptionInputHandler}\n            />\n        </form>\n    );\n};\n\nexport default NewPlace;\n"]},"metadata":{},"sourceType":"module"}